name: Android Release Build

on:
  workflow_dispatch:

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install NPM dependencies
        run: npm install

      - name: Set up Java (for Android build)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Install Required SDK Packages
        run: |
          sdkmanager "build-tools;35.0.0" "platforms;android-35" "platform-tools" \
                      "ndk;27.1.12297006" \
                      "extras;android;m2repository" "extras;google;m2repository"

      - name: Build and Tweak Android Folder
        run: ./build-android.sh

      - name: Decode Keystore
        run: echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > $GITHUB_WORKSPACE/android/app/local-release-key.keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      
      - name: Check if Keystore Exists
        run: |
          if [ ! -f android/app/local-release-key.keystore ]; then
            echo "ERROR: Keystore file not found!"
            exit 1
          fi    

      - name: Signing Build.gradle
        run: node hooks/android/3_signing.js
        env:
          ANDROID_KEYSTORE_PATH: app/local-release-key.keystore
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          GITHUB_ACTIONS: 'true'
      
      
      - name: Read App Version
        id: get_version
        run: |
          echo "VERSION=$(grep APP_VERSION .env | cut -d '=' -f 2)" >> $GITHUB_ENV
      
      - name: Build Release APK
        working-directory: android
        run: ./gradlew assembleRelease
      
      - name: Upload APK as workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: conceal-authenticator-${{ steps.get_version.outputs.VERSION }}
          path: android/app/build/outputs/apk/release/ConcealAuthenticator*.apk
